.catch(error => {
    setError(`Error: ${error.message}`);
    setLoading(false);
    console.error("Detailed error information:", error);
});
<li key={item.id}>{renderItem(item)}</li>const List = ({ items, renderItem }) => (
    <ul>
        {items.map(item => (
            <li key={item.id}>{renderItem(item)}</li>
        ))}
    </ul>
);useEffect(() => {
    setLoading(true);
    axios
        .get('https://jsonplaceholder.typicode.com/posts')
        .then(response => {
            setData(response.data);
            setLoading(false);
        })
        .catch(error => {
            setError(`Error: ${error.message}`);
            setLoading(false);
            console.error("Detailed error information:", error);
        });
}, []);
// List.js
import React from 'react';

const List = ({ items, renderItem }) => (
  <ul>
    {items.map(item => (
      <li key={item.id}>{renderItem(item)}</li>
    ))}
  </ul>
);

export default List;

// App.js
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import List from './List';

function App() {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    setLoading(true);
    axios
      .get('https://jsonplaceholder.typicode.com/posts')
      .then(response => {
        setData(response.data);
        setLoading(false);
      })
      .catch(error => {
        setError(`Error: ${error.message}`);
        setLoading(false);
        console.error("Detailed error information:", error);
      });
  }, []);

  const renderItem = item => {
    return <div>{item.title}</div>;
  };

  return (
    <div>
      {loading ? (
        <p>Loading...</p>
      ) : error ? (
        <p>Error: {error}</p>
      ) : (
        <List items={data} renderItem={renderItem} />
      )}
    </div>
  );
}

export default App;
